/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Delivery as PrismaDelivery,
  Order as PrismaOrder,
} from "@prisma/client";

export class DeliveryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DeliveryCountArgs, "select">): Promise<number> {
    return this.prisma.delivery.count(args);
  }

  async deliveries<T extends Prisma.DeliveryFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeliveryFindManyArgs>
  ): Promise<PrismaDelivery[]> {
    return this.prisma.delivery.findMany<Prisma.DeliveryFindManyArgs>(args);
  }
  async delivery<T extends Prisma.DeliveryFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeliveryFindUniqueArgs>
  ): Promise<PrismaDelivery | null> {
    return this.prisma.delivery.findUnique(args);
  }
  async createDelivery<T extends Prisma.DeliveryCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeliveryCreateArgs>
  ): Promise<PrismaDelivery> {
    return this.prisma.delivery.create<T>(args);
  }
  async updateDelivery<T extends Prisma.DeliveryUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeliveryUpdateArgs>
  ): Promise<PrismaDelivery> {
    return this.prisma.delivery.update<T>(args);
  }
  async deleteDelivery<T extends Prisma.DeliveryDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeliveryDeleteArgs>
  ): Promise<PrismaDelivery> {
    return this.prisma.delivery.delete(args);
  }

  async getOrder(parentId: string): Promise<PrismaOrder | null> {
    return this.prisma.delivery
      .findUnique({
        where: { id: parentId },
      })
      .order();
  }
}
